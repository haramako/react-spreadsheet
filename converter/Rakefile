$LOAD_PATH << "."

require "./pb_convert"

def logger
  unless $_logger
    $_logger = Logger.new(STDOUT)
    $_logger.level = Logger::INFO
  end
  $_logger
end

task :default do
  files = Dir.glob("C:/Work/_old/dfz/Data/Master/**/*.xls")
  #puts files

  tables = {}

  files.take(399).each do |f|
    book = PbConvert.excel_cache(f)
    book.worksheets.each do |sheet|
      # ':' で分離して、２番目の方をモデル名として使う
      sheet_name_pair = sheet.name.split(".", 2)
      if sheet_name_pair.size == 2
        file_prefix = "_" + sheet_name_pair[0]
        model_name = sheet_name_pair[1]
      else
        file_prefix = ""
        model_name = sheet_name_pair[0]
      end

      next unless model_name =~ /^[a-zA-Z0-9\.]+$/
      # pb_name = t.name.gsub(".touch", file_prefix + "_" + model_name + ".pb")

      types, items = PbConvert.conv_sheet(f, sheet.name)
      logger.info "f=#{f}, sheet=#{sheet.name}, len=#{items.size}"
      items.each do |item|
        item[:_type] = model_name
        item[:_guid] = rand(1 << 63)
      end
      types = types.map do |e| { key: e[0], type: e[1] } end
      tables[model_name] ||= { columns: types, items: [] }
      tables[model_name][:items].concat(items)
    end
  end

  json = JSON.pretty_generate(tables, { indent: "\t", check_circular: false })
  IO.write("../public/data2.json", json)
end
